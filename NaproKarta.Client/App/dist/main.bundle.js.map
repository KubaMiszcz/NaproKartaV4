{"version":3,"sources":["D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/$_lazy_route_resource lazy","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.module.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/models/ichart.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/app.service.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/chart.service.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/user.service.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/global-variables.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/pipes/date-mm-dd.pipe.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.css","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.html","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/environments/environment.ts","D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-nav-bar></app-nav-bar>\\r\\n<br><br><br>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'NaproKarta v2.0';\r\n  // userCharts\r\n\r\n  // wywal potem\r\n  label = 'ok';\r\n  isChecked = true;\r\n  side = 'after';\r\n\r\n  clicked() {\r\n    console.log('cliked');\r\n    this.isChecked = !this.isChecked;\r\n    this.label = this.isChecked ? 'ok' : 'nook';\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.component.ts","import { ErrorPageComponent } from './shared/error-page/error-page.component';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  MatSlideToggleModule\r\n  , MatCheckboxModule\r\n  , MatButtonModule\r\n  , MatButtonToggleModule\r\n  , MatSelectModule\r\n} from '@angular/material';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\nimport { AppService } from './services/app.service';\r\nimport { UserService } from './services/user.service';\r\nimport { ChartService } from './services/chart.service';\r\n\r\nimport { DateMmDdPipe } from './shared/pipes/date-mm-dd.pipe';\r\n\r\nimport { WelcomeComponent } from './shared/welcome/welcome.component';\r\nimport { NavBarComponent } from './shared/nav-bar/nav-bar.component';\r\n\r\nimport { ChartComponent } from './chart/chart/chart.component';\r\nimport { ChartAddNewComponent } from './chart/chart-add-new/chart-add-new.component';\r\nimport { ChartCellComponent } from './chart/chart-cell/chart-cell.component';\r\nimport { ChartRowComponent } from './chart/chart-row/chart-row.component';\r\nimport { ObservationComponent } from './observation/observation.component';\r\n\r\nimport { MyToggleSwitchComponent } from './my-toggle-switch/my-toggle-switch.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n    , ErrorPageComponent\r\n    , ChartComponent\r\n    , ChartRowComponent\r\n    , ChartCellComponent\r\n    , ObservationComponent\r\n    , MyToggleSwitchComponent\r\n    , DateMmDdPipe\r\n    , NavBarComponent\r\n    , WelcomeComponent\r\n    , ChartAddNewComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { path: 'chartAddNew', component: ChartAddNewComponent }\r\n      , { path: 'chart/:id', component: ChartComponent }\r\n      , { path: 'error-page', component: ErrorPageComponent }\r\n      , { path: 'welcome', component: WelcomeComponent }\r\n      , { path: '', redirectTo: 'welcome', pathMatch: 'full' }\r\n      , { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\r\n    ])\r\n    , BrowserModule\r\n    , FormsModule\r\n    , HttpClientModule\r\n    , BrowserAnimationsModule\r\n    , MatInputModule\r\n    , MatSlideToggleModule\r\n    , MatButtonModule\r\n    , MatCheckboxModule\r\n    , MatButtonToggleModule\r\n    , MatSelectModule\r\n    , MatFormFieldModule\r\n  ],\r\n  providers: [UserService, AppService, ChartService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.notka {\\r\\n  height: 500px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  width: 49%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.css\n// module id = ../../../../../src/app/chart/chart-add-new/chart-add-new.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\"> </div>\\n\\n  <div class=\\\"col-6\\\">\\n    <!-- <form class=\\\"example-form\\\"> -->\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Nazwa Karty\\\" [(ngModel)]='chartToAdd.title'>\\n          </mat-form-field>\\n        </p>\\n      </div>\\n    </div>\\n    <br>\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">\\n          <mat-form-field class=\\\"example-full-width note\\\">\\n            <textarea matInput placeholder=\\\"Notka do karty\\\" \\n            matTextareaAutosize matAutosizeMinRows=\\\"2\\\"\\n            matAutosizeMaxRows=\\\"50\\\"\\n            [(ngModel)]='chartToAdd.note'></textarea>\\n          </mat-form-field>\\n        </p>\\n      </div>\\n    </div>\\n    <br>\\n    <div>\\n      <button mat-raised-button class=\\\"btn \\\">Anuluj</button>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"btn \\\" (click)='AddNewChart()'>Dodaj</button>\\n      <!-- [routerLink]=\\\"[ '/chart', id ]\\\"         -->\\n    </div>\\n\\n    <!-- </form> -->\\n  </div>\\n\\n  <div class=\\\"col-3\\\"> </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.html\n// module id = ../../../../../src/app/chart/chart-add-new/chart-add-new.component.html\n// module chunks = main","import { IChart, Chart } from './../../models/ichart';\nimport { Component, OnInit } from '@angular/core';\nimport { ChartService } from '../../services/chart.service';\n\n@Component({\n  selector: 'app-chart-add-new',\n  templateUrl: './chart-add-new.component.html',\n  styleUrls: ['./chart-add-new.component.css']\n})\nexport class ChartAddNewComponent implements OnInit {\n  chartToAdd: IChart = new Chart();\n\n  constructor(private chartService: ChartService) { }\n\n  ngOnInit() {\n    this.chartToAdd.title = 'karta nr ...';\n    this.chartToAdd.title = '';\n  }\n\n  AddNewChart(): number {\n    console.log('title' + this.chartToAdd.title);\n    console.log('not' + this.chartToAdd.note);\n    console.log('not' + this.chartToAdd);\n\n    const msg = this.chartService.AddNewChart(this.chartToAdd);\n\n    // if (msg[0] !== 0) {\n    //  console.log(msg);\n    // alert(msg[1]);\n    // }\n    return null;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-add-new/chart-add-new.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\r\\n  border: 1px solid rgb(56, 56, 56);\\r\\n  padding: 0px;\\r\\n  margin: 0px;\\r\\n  vertical-align: central;\\r\\n  text-align: center;\\r\\n  border-spacing: 0px;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\ntable:hover {\\r\\n  background-color: #99e699\\r\\n}\\r\\n\\r\\ntd {\\r\\n  border: none;\\r\\n  vertical-align: central;\\r\\n  text-align: center;\\r\\n  /* padding: 1px; */\\r\\n  width: 50px;\\r\\n  border-radius: 10px;\\r\\n  /* text-height:90%; */\\r\\n  font-size: 90%;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  width: 60px;\\r\\n}\\r\\n\\r\\n.date {\\r\\n  border-top: 1px solid black;\\r\\n  border-bottom: 1px solid black;\\r\\n  background-color: burlywood;\\r\\n}\\r\\n\\r\\n.marker {\\r\\n  background-color: beige;\\r\\n  border-radius: 0px;\\r\\n  padding: 0px;\\r\\n  margin: 0px;\\r\\n  width: 50px;\\r\\n  height: auto;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.css\n// module id = ../../../../../src/app/chart/chart-cell/chart-cell.component.css\n// module chunks = main","module.exports = \"<table>\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td class=\\\"marker\\\">\\r\\n        <img src=\\\"{{markerUrl}}\\\" alt=\\\"{{markerAltText}}\\\" />\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td class=\\\" date\\\">12-12</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>{{letter}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>{{numTimes}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>{{cipherAndCipherCD}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>\\r\\n        {{comments}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>{{noteMarks}}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n<!-- \\r\\n<table class=\\\"chartCellContent\\\" name=\\\"RowCol\\\" value=\\\"@Model.RowCol\\\" @*onclick=\\\"@(\\\" window.location.href='\\\" + @Url.Action(\\\"ObservationEdit\\\", \\\"User\\\", new {id = Model.ID, RowCol = Model.RowCol}) + \\\"'\\r\\n  \\\");\\\">*@ @*onclick=\\\"@(\\\"location.href='\\\" + @Url.Action(\\\"ObservationEdit\\\", \\\"User\\\", new {id = Model.ID, RowCol = Model.RowCol}) +\\r\\n  \\\"'\\\");\\\"*@ onclick=\\\"location.href='@Url.Action(\\\"ObservationEdit\\\", \\\"User\\\", new { id = Model.ID, RowCol = Model.RowCol })'\\\"\\r\\n  @*location.href='\\r\\n  <%: Url.Action(\\\"Action\\\", \\\"Controller\\\")*@\\r\\n       >\\r\\n    <tr>\\r\\n        <td style=\\\"background-color: beige;\\\">\\r\\n            <img style=\\\"width: 50px; height: auto;\\\" src=\\\"@Model.MarkerUrl\\\" alt=\\\"@Model.MarkerAltText\\\"/>\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr><td class=\\\"chartCellContent date\\\">@Html.Raw(Model.Date)</td></tr>\\r\\n    <tr><td class=\\\"chartCellContent\\\">@Html.Raw(Model.Letter)</td></tr>\\r\\n    <tr><td class=\\\"chartCellContent\\\">@Html.Raw(Model.NumTimes)</td></tr>\\r\\n    <tr><td class=\\\"chartCellContent\\\">@Html.Raw(Model.CipherAndCipherCD)</td></tr>\\r\\n    <tr><td class=\\\"chartCellContent\\\">@Html.Raw(Model.Comments)</td></tr>\\r\\n    <tr>\\r\\n        <td>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    @{\\r\\n                        int i = 0;\\r\\n                        foreach (string noteMark in Model.NoteMarks)\\r\\n                        {\\r\\n                            <td class=\\\"chartCellContent\\\" style=\\\"@Model.NoteMarksBackgroundColors[i]\\\">\\r\\n                                <div>@Html.Raw(noteMark)</div></td>\\r\\n                            i++;\\r\\n                        }\\r\\n                    }\\r\\n                </tr>\\r\\n            </table>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.html\n// module id = ../../../../../src/app/chart/chart-cell/chart-cell.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chart-cell',\r\n  templateUrl: './chart-cell.component.html',\r\n  styleUrls: ['./chart-cell.component.css']\r\n})\r\nexport class ChartCellComponent implements OnInit {\r\n  row: number;\r\n  col: number;\r\n  markerUrl: string;\r\n  markerAltText: string;\r\n  date: string;\r\n  letter: string;\r\n  numTimes: string;\r\n  cipherAndCipherCD: string;\r\n  comments: string;\r\n  noteMarks: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.row = 0;\r\n    this.col = 0;\r\n    this.markerUrl = '../../../assets/img/markers/markerGrey.jpg';\r\n    this.markerAltText = 'altext';\r\n    this.date = '12-12';\r\n    this.letter = 'H B';\r\n    this.numTimes = 'XD';\r\n    this.cipherAndCipherCD = '10CD';\r\n    this.comments = this.convertArrayToString(['B', 'W', 'I']);\r\n    this.noteMarks = this.convertArrayToString(['W', 'W', 'W']);\r\n\r\n  }\r\n\r\n  convertArrayToString(array: string[]): string {\r\n    var arr = '';\r\n    array.forEach(element => {\r\n      arr += (element.toUpperCase() + ' ');\r\n      arr.slice(0, -1);\r\n    });\r\n    return arr;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-cell/chart-cell.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\r\\n  border: 1px solid rgb(56, 56, 56);\\r\\n  padding: 0px;\\r\\n  margin: 0px;\\r\\n  vertical-align: central;\\r\\n  text-align: center;\\r\\n  /* border-spacing: 0px; */\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  border: none;\\r\\n  vertical-align: central;\\r\\n  text-align: center;\\r\\n  padding: 0px;\\r\\n  width: 50px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.css\n// module id = ../../../../../src/app/chart/chart-row/chart-row.component.css\n// module chunks = main","module.exports = \"<table>\\r\\n  <tr>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n    <td>\\r\\n      <app-chart-cell></app-chart-cell>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.html\n// module id = ../../../../../src/app/chart/chart-row/chart-row.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chart-row',\r\n  templateUrl: './chart-row.component.html',\r\n  styleUrls: ['./chart-row.component.css']\r\n})\r\nexport class ChartRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart-row/chart-row.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\r\\n    border: 2px solid rgb(56, 56, 56);\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n    vertical-align: central;\\r\\n    text-align: center;\\r\\n    border-spacing: 0px;\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n  \\r\\n  td {\\r\\n    border: none;\\r\\n    vertical-align: central;\\r\\n    text-align: center;\\r\\n    padding: 0px;\\r\\n    width: 50px;\\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.css\n// module id = ../../../../../src/app/chart/chart/chart.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <h4 class=\\\"card-title m-2\\\">Wybrana Karta: {{chartTitle}}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"m-2 btn btn-info\\\">Edytuj Wlaściwości tej karty</button>\\r\\n      <button type=\\\"button\\\" class=\\\"m-2 btn btn-danger\\\">Usuń te kartę</button>\\r\\n    </div>\\r\\n    <!-- <p class=\\\"card-text\\\">Text</p> -->\\r\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Twoja Notka do tej Karty:</h6>\\r\\n    <span> {{chartNote}}</span>\\r\\n \\r\\n    <table class=\\\"m-2\\\">\\r\\n      <tr>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <app-chart-row></app-chart-row>\\r\\n            </td>\\r\\n             </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <app-chart-row></app-chart-row>\\r\\n            </td>\\r\\n             </tr>\\r\\n        </table>\\r\\n      \\r\\n      </tr>\\r\\n    </table>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.html\n// module id = ../../../../../src/app/chart/chart/chart.component.html\n// module chunks = main","import { ChartService } from '../../services/chart.service';\r\nimport { IChart } from './../../models/ichart';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.css']\r\n})\r\nexport class ChartComponent implements OnInit {\r\n  chartTitle: string = 'chhh';\r\n  chartNote: string = 'adsadsad';\r\n  chart: IChart;\r\n  currentChartId: number;\r\n\r\n  constructor(private chartService: ChartService, private route: ActivatedRoute) {\r\n    this.currentChartId = +this.route.snapshot.paramMap.get('id');\r\n    console.log(this.currentChartId);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.chartService.GetChartById(this.currentChartId)\r\n      .subscribe(chart => this.chart = chart, error => console.log(error), () => {\r\n        this.chartTitle = this.chart.title;\r\n        this.chartNote = this.chart.note;\r\n      });\r\n    console.log('aat' + this.currentChartId);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/chart/chart/chart.component.ts","import { ICycle } from './icycle';\n\nexport interface IChart {\n    title: string;\n    note: string;\n    //cycles: ICycle[];\n}\n\nexport class Chart implements IChart {\n     title: string;\n     note: string;\n    //cycles: ICycle[];\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/models/ichart.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.css\n// module id = ../../../../../src/app/my-toggle-switch/my-toggle-switch.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  my-toggle-switch works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.html\n// module id = ../../../../../src/app/my-toggle-switch/my-toggle-switch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-toggle-switch',\r\n  templateUrl: './my-toggle-switch.component.html',\r\n  styleUrls: ['./my-toggle-switch.component.css']\r\n})\r\nexport class MyToggleSwitchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/my-toggle-switch/my-toggle-switch.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"img {\\r\\n    width: 60px;\\r\\n  }\\r\\n.card{\\r\\n    border-color: lightseagreen;\\r\\n}\\r\\n button{\\r\\n    /* background-color: rgb(165, 168, 255) */\\r\\n}\\r\\n\\r\\nbutton:hover{\\r\\n    background-color: lightblue;\\r\\n}\\r\\n.selected-button{\\r\\n    background-color: rgb(35, 41, 221);\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.css\n// module id = ../../../../../src/app/observation/observation.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerRed.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGreen.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\" selected-button btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerYellow.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGreenBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerYellowBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerWhiteBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"btn btn-secondary btn-lg       \\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGrey.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerRed.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGreen.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerYellow.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGreenBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerYellowBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerWhiteBaby.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">\\r\\n      <img src=\\\"../../assets/img//markers/markerGrey.jpg\\\" alt=\\\"\\\">\\r\\n    </button>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.html\n// module id = ../../../../../src/app/observation/observation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-observation',\r\n  templateUrl: './observation.component.html',\r\n  styleUrls: ['./observation.component.css']\r\n})\r\nexport class ObservationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/observation/observation.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { INavBar } from '../models/navbar';\nimport { GlobalVariables } from '../shared/global-variables';\n\nconst applicationUrl = GlobalVariables.BASE_API_URL + '/app';\n\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) { }\n\n  // TODO: set golab header withcredentials\n  GetNavBarData(): Observable<INavBar> {\n    console.log(applicationUrl + 'GetNavBarData');\n    return this.http.get<INavBar>(applicationUrl + '/GetNavBarData', { withCredentials: true });\n  }\n\n  GetStr(): Observable<string> {\n    return this.http.get<string>(applicationUrl + '/GetStr', { withCredentials: true });\n  }\n\n\n  // GetChart(): Observable<IChart> {\n  //   return this.http.get<IChart>(this.urlGetChart);\n  // }\n  // GetAllUserCharts(): Observable<IChart[]> {\n  //   return this.http.get<IChart[]>(this.urlGetAllUserCharts);\n  // }\n\n\n\n\n  ////////////////\n\n  //  constructor(private http: HttpClient) { }\n\n  // GetPendingOrders(): Observable<IPendingOrder[]> {\n  //   return this.http.get<IPendingOrder[]>(this.pendingOrders);\n  // }\n\n  // ConfirmMealOrder(meal: IOrderedMealForRestaurant): void {\n  //   this.http.put(this.confirmMealOrder, meal)\n  //     .subscribe(error => console.log(error), () => { });\n  // }\n\n  // GetConfirmedUserOrders(): Observable<IOrder[]> {\n  //   return this.http.get<IOrder[]>(this.confirmedUserOrders);\n  // }\n\n  // GetRejectedUserOrders(): Observable<IOrder[]> {\n  //   return this.http.get<IOrder[]>(this.rejectedUserOrders);\n  // }\n\n  // CashbackForUnfinished(rejectedUserOrders: IOrder[]) {\n  //   this.http.put(this.cashbackForUnfinished, rejectedUserOrders)\n  //     .subscribe(error => console.log(error), () => { });\n  // }\n  // DeleteUnfinishedOrders() {\n  //   console.log('333');\n  //   return this.http.delete(this.deleteUnfinishedOrders)\n  //   .subscribe();\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/app.service.ts","import { IChart, Chart } from './../models/ichart';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { GlobalVariables } from '../shared/global-variables';\n\nconst applicationUrl = GlobalVariables.BASE_API_URL + '/chart';\n\n@Injectable()\nexport class ChartService {\n\n  constructor(private http: HttpClient) { }\n\n  GetChartById(id): Observable<IChart> {\n    return this.http.get<IChart>(applicationUrl + '/GetChartById/' + id, { withCredentials: true });\n  }\n\n  AddNewChart(chartToAdd: Chart) {\n    return this.http.post(applicationUrl + '/AddNewChart', chartToAdd, { withCredentials: true })\n      .subscribe(error => console.log(error), () => { });\n  }\n\n\n  // CashbackForUnfinished(rejectedUserOrders: IOrder[]) {\n  //   this.http.put(this.cashbackForUnfinished, rejectedUserOrders)\n  //     .subscribe(error => console.log(error), () => { });\n  // }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/chart.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GlobalVariables } from '../shared/global-variables';\r\n\r\nconst applicationUrl = GlobalVariables.BASE_API_URL + '/user';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/services/user.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.css\n// module id = ../../../../../src/app/shared/error-page/error-page.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>end of teh internets</h1> \\r\\n    <p>This is some text.</p> \\r\\n  </div>\\r\\n  <p>This is another text.</p> \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.html\n// module id = ../../../../../src/app/shared/error-page/error-page.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/error-page/error-page.component.ts","// export class GlobalVariables {\nexport const GlobalVariables = Object.freeze({\n    dummy: ''\n    , BASE_NAPROCLIENT_URL: 'http://www.naproclient.hostingasp.pl'\n    , BASE_API_URL: 'http://www.naproclient.hostingasp.pl/api'\n    , BASE_NAPROANGULAR_URL: 'http://www.naproangular.hostingasp.pl'\n\n    // , BASE_NAPROCLIENT_URL: 'http://localhost/NaproKarta'\n    // , BASE_API_URL: 'http://localhost/NaproKarta/api'\n    // , BASE_NAPROANGULAR_URL: 'http://localhost:4200'\n    // // , BASE_API_URL: 'http://localhost/NaproKarta'\n\n\n    // ... more of your variables\n});\n\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/global-variables.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.css\n// module id = ../../../../../src/app/shared/nav-bar/nav-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container \\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top justify-content-between\\\">\\r\\n    <div class=\\\"d-flex justify-content-start\\\">\\r\\n\\r\\n\\r\\n      <span class=\\\"navbar-brand\\\">\\r\\n        <img src=\\\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\"\\r\\n          alt=\\\"\\\"> NaproKarta\\r\\n      </span>\\r\\n      <span *ngIf=\\\"isLogged\\\" class=\\\"navbar-brand \\\">\\r\\n        {{isLogged ? ('Hello ' + userName) : ''}}\\r\\n      </span>\\r\\n\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n\\r\\n      <div *ngIf=\\\"isLogged\\\" class=\\\" collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n\\r\\n          <li *ngIf=\\\"chartIdsAndTitles.length>0\\\" class=\\\"mr-2 nav-item \\\">\\r\\n            <div class=\\\"dropdown\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\"  class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n                aria-expanded=\\\"false\\\">\\r\\n                Wybierz karte </button>\\r\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                <a *ngFor=\\\"let chartIdAndTitle of chartIdsAndTitles; let idx = index\\\" class=\\\"dropdown-item\\\" [id]='chartIdAndTitle[0]' [routerLink]=\\\"[ '/chart',chartIdAndTitle[0]]\\\">\\r\\n                  {{chartIdAndTitle[1]}}\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n          <!-- <li class=\\\"ml-2 nav-item\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"[ '/chartAddNew']\\\">Dodaj nową kartę</button>\\r\\n          </li> -->\\r\\n          <li class=\\\"ml-2 nav-item\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[ '/chartAddNew']\\\" class=\\\"btn btn-md\\\">Dodaj nową kartę</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-end\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li *ngIf=\\\"isLogged\\\">\\r\\n          <a href=\\\"{{applicationUrl + '/Manage'}}\\\" class=\\\"nav-item nav-link\\\">Ustawienia Konta</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!isLogged\\\" class=\\\"nav-item\\\">\\r\\n          <a href=\\\"{{applicationUrl + '/Account/Register'}}\\\" class=\\\"nav-item nav-link\\\">Zarejestruj</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!isLogged\\\" class=\\\"nav-item\\\">\\r\\n          <a href=\\\"{{applicationUrl + '/Account/Login'}}\\\" class=\\\"nav-item nav-link\\\">Zaloguj</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isLogged\\\" class=\\\"nav-item\\\">\\r\\n          <a href=\\\"{{applicationUrl + ''}}\\\" class=\\\"nav-item nav-link\\\">Wyloguj</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.html\n// module id = ../../../../../src/app/shared/nav-bar/nav-bar.component.html\n// module chunks = main","import { AppService } from '../../services/app.service';\r\nimport { IChart } from './../../models/ichart';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { INavBar } from '../../models/navbar';\r\nimport { Input } from '@angular/core/src/metadata/directives';\r\nimport { GlobalVariables } from '../global-variables';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  navBarData: INavBar;\r\n  userName: string;\r\n  isLogged: boolean;\r\n  chartIdsAndTitles: any;\r\n  applicationUrl = GlobalVariables.BASE_NAPROCLIENT_URL;\r\n\r\n  foods = [\r\n    { value: 'steak-0', viewValue: 'Steak' },\r\n    { value: 'pizza-1', viewValue: 'Pizza' },\r\n    { value: 'tacos-2', viewValue: 'Tacos' }\r\n  ];\r\n\r\n  constructor(private appService: AppService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.appService.GetNavBarData()\r\n      .subscribe(navBarData => this.navBarData = navBarData, error => console.log(error), () => {\r\n        this.userName = this.navBarData.userName;\r\n        this.isLogged = this.navBarData.isLogged;\r\n        this.chartIdsAndTitles = this.navBarData.chartIdsAndTitles;\r\n        // console.log(this.navBarData.chartIdsAndTitles);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/nav-bar/nav-bar.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dateMmDd'\r\n})\r\nexport class DateMmDdPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/pipes/date-mm-dd.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.css\n// module id = ../../../../../src/app/shared/welcome/welcome.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-3\\\">Fluid jumbo heading</h1>\\n    <p class=\\\"lead\\\">Jumbo helper text</p>\\n    <hr class=\\\"my-2\\\">\\n    <p>More info</p>\\n    <p class=\\\"lead\\\">\\n      <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"Jumbo action link\\\" role=\\\"button\\\">Jumbo action name</a>\\n    </p>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.html\n// module id = ../../../../../src/app/shared/welcome/welcome.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  pageTitle: string = 'Welcome';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/app/shared/welcome/welcome.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Desktop/GitHubRepositories/NaproKartaV4/NaproKarta.Client/App/src/main.ts"],"sourceRoot":"webpack:///"}